FROM alpine:latest

RUN apk update && \
    apk add musl-dev cmake git git-lfs bash make \
            gcc g++ aria2 \
            mingw-w64-gcc i686-mingw-w64-gcc

ENV WORKDIR=/src
ENV INSTALL_DIR=/install
ENV musl=true


#RUN curl https://musl.cc/aarch64-linux-musl-cross.tgz 

WORKDIR /toolchain


COPY ./build-native/aria2.list /toolchain/aria2.list

#COPY --chmod=0777 ./build-native/install-musl-gcc.sh .
#RUN dos2unix ./install-musl-gcc.sh

#RUN ./install-musl-gcc.sh x86_64-linux-musl
#RUN ./install-musl-gcc.sh riscv32-linux-musl
#RUN ./install-musl-gcc.sh riscv64-linux-musl
#RUN ./install-musl-gcc.sh aarch64-linux-musl
#RUN ./install-musl-gcc.sh arm-linux-musleabi


ENV PATH=${PATH}:/toolchain/x86_64-linux-musl-cross/bin
ENV PATH=${PATH}:/toolchain/riscv32-linux-musl-cross/bin
ENV PATH=${PATH}:/toolchain/riscv64-linux-musl-cross/bin
ENV PATH=${PATH}:/toolchain/aarch64-linux-musl-cross/bin
ENV PATH=${PATH}:/toolchain/arm-linux-musleabi-cross/bin


WORKDIR /toolchain

RUN aria2c -i aria2.list -j16 -x16 --file-allocation=prealloc
RUN ls | grep tgz | while read line ; do tar xf $line ; done

WORKDIR /

COPY --chmod=0777 ./build-native/build-libcpuinfo.sh /
COPY --chmod=0777 ./binding.c /
RUN dos2unix /build-libcpuinfo.sh

ENTRYPOINT [ "bash", "-c" ]

